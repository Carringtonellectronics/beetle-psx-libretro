SOURCES_CXX :=
SOURCES_C   :=

DEPS_DIR     := $(CORE_DIR)/deps
LIBRETRO_DIR := $(CORE_DIR)/libretro-common
LIBKIRK_DIR  := $(DEPS_DIR)/libkirk
MEDNAFEN_DIR := $(CORE_DIR)/mednafen
CORE_EMU_DIR := $(MEDNAFEN_DIR)/psx
RSXGL_DIR    := $(CORE_DIR)/rustation-libretro/src
ifeq ($(HAVE_CDROM_NEW), 1)
FLAGS += -DHAVE_CDROM_NEW
CDROM_DIR    := $(MEDNAFEN_DIR)/cdrom-new
else
CDROM_DIR    := $(MEDNAFEN_DIR)/cdrom
endif

ifeq ($(HAVE_OPENGL), 1)
ifeq ($(GLES), 1)
GLFLAGS  := -DHAVE_OPENGLES -DHAVE_OPENGLES2
CFLAGS   += $(GLFLAGS)
CXXFLAGS += $(GLFLAGS)

SOURCES_C += $(LIBRETRO_DIR)/glsym/glsym_es2.c
else
GLFLAGS   := -DHAVE_OPENGL -DCORE
CFLAGS    += $(GLFLAGS)
CXXFLAGS  += $(GLFLAGS)
SOURCES_C += $(LIBRETRO_DIR)/glsym/glsym_gl.c
endif

ifeq ($(OS_WINDOWS), 1)
CFLAGS += -DOS_WINDOWS
CXXFLAGS += -DOS_WINDOWS
endif

ifeq ($(ARCH_64BIT), 1)
CFLAGS += -DARCH_64BIT
CXXFLAGS += -DARCH_64BIT
else
CFLAGS += -DARCH_32BIT
CXXFLAGS += -DARCH_32BIT
endif

ifeq ($(HAVE_JIT), 1)
CFLAGS += -DJIT
CXXFLAGS += -DJIT
#JIT Common files
SOURCES_CXX += $(CORE_DIR)/jit/MIPS.cpp \
				$(CORE_DIR)/jit/MIPSAnalyst.cpp \
				$(CORE_DIR)/jit/MIPSAsm.cpp \
				$(CORE_DIR)/jit/MIPSCodeUtils.cpp \
				$(CORE_DIR)/jit/MIPSDebugInterface.cpp \
				$(CORE_DIR)/jit/MIPSDis.cpp \
				$(CORE_DIR)/jit/MIPSInt.cpp \
				$(CORE_DIR)/jit/MIPSStackWalk.cpp \
				$(CORE_DIR)/jit/MIPSTables.cpp \
				$(CORE_DIR)/jit/JitCommon/JitBlockCache.cpp \
				$(CORE_DIR)/jit/JitCommon/JitCommon.cpp \
				$(CORE_DIR)/jit/JitCommon/JitState.cpp \
				$(CORE_DIR)/jit/dis/disarm.cpp \
				$(CORE_DIR)/jit/dis/DisArm64.cpp \
				$(CORE_DIR)/jit/Debugger/Breakpoints.cpp \
				$(CORE_DIR)/jit/Debugger/DisassemblyManager.cpp \
				$(CORE_DIR)/jit/Debugger/SymbolMap.cpp \
				$(CORE_DIR)/jit/Common/CPUDetect.cpp \
				$(CORE_DIR)/jit/Common/x64Emitter.cpp \
				$(CORE_DIR)/jit/Common/ArmEmitter.cpp \
				$(CORE_DIR)/jit/Common/Arm64Emitter.cpp \
				$(CORE_DIR)/jit/Memory/MemoryUtil.cpp \
				$(CORE_DIR)/jit/Common/DumbCoreStuff.cpp

SOURCES_CXX += $(CORE_DIR)/jit/Common/math_util.cpp  \
				$(CORE_DIR)/jit/Common/expression_parser.cpp \
				$(CORE_DIR)/jit/Common/xxhash.cpp \
				$(CORE_DIR)/jit/cityhash/city.cpp \
				$(CORE_DIR)/jit/Common/FileUtil.cpp \
				$(CORE_DIR)/jit/Common/StringUtils.cpp \
				$(CORE_DIR)/jit/Common/base/stringutil.cpp \
				$(CORE_DIR)/jit/Common/Misc.cpp \
				$(CORE_DIR)/jit/Common/utf8.cpp \
				$(CORE_DIR)/mednafen/jittimestamp.cpp

SOURCES_C += $(CORE_DIR)/jit/dis/decode.c \
				$(CORE_DIR)/jit/dis/itab.c \
				$(CORE_DIR)/jit/dis/syn.c \
				$(CORE_DIR)/jit/dis/syn-intel.c \
				$(CORE_DIR)/jit/dis/syn-att.c \
				$(CORE_DIR)/jit/dis/udis86.c \

ifeq ($(IS_X86), 1)
				#X86 specific files
				CFLAGS += -DARCH_X86
				CXXFLAGS += -DARCH_X86

				#Do this later?
				#$(CORE_DIR)/jit/x86/IRToX86.cpp \

				SOURCES_CXX += $(CORE_DIR)/jit/x86/Asm.cpp \
				$(CORE_DIR)/jit/x86/CompALU.cpp \
				$(CORE_DIR)/jit/x86/CompBranch.cpp \
				$(CORE_DIR)/jit/x86/CompFPU.cpp \
				$(CORE_DIR)/jit/x86/CompLoadStore.cpp \
				$(CORE_DIR)/jit/x86/CompReplace.cpp \
				$(CORE_DIR)/jit/x86/Jit.cpp \
				$(CORE_DIR)/jit/x86/JitSafeMem.cpp \
				$(CORE_DIR)/jit/x86/RegCache.cpp \
				$(CORE_DIR)/jit/x86/RegCacheFPU.cpp \
				$(CORE_DIR)/jit/x86/CompCP.cpp \
				$(CORE_DIR)/jit/Common/x64Analyzer.cpp \
				$(CORE_DIR)/jit/Common/Thunk.cpp \
				$(CORE_DIR)/jit/Common/ABI.cpp
endif #x86

endif #JIT

SOURCES_C += $(LIBRETRO_DIR)/glsm/glsm.c \
				 $(LIBRETRO_DIR)/glsym/rglgen.c

SOURCES_CXX += $(CORE_DIR)/rsx/rsx_lib_gl.cpp
endif

INCFLAGS := -I$(CORE_DIR) -I$(MEDNAFEN_DIR) -I$(MEDNAFEN_DIR)/include -I$(MEDNAFEN_DIR)/intl -I$(MEDNAFEN_DIR)/hw_sound -I$(MEDNAFEN_DIR)/hw_cpu -I$(MEDNAFEN_DIR)/hw_misc -I$(LIBRETRO_DIR)/include -I$(DEPS_DIR)/zlib -I/usr/local/include


SOURCES_C += $(DEPS_DIR)/zlib/adler32.c \
				 $(DEPS_DIR)/zlib/compress.c \
				 $(DEPS_DIR)/zlib/crc32.c \
				 $(DEPS_DIR)/zlib/deflate.c \
				 $(DEPS_DIR)/zlib/gzclose.c \
				 $(DEPS_DIR)/zlib/gzlib.c \
				 $(DEPS_DIR)/zlib/gzread.c \
				 $(DEPS_DIR)/zlib/gzwrite.c \
				 $(DEPS_DIR)/zlib/inffast.c \
				 $(DEPS_DIR)/zlib/inflate.c \
				 $(DEPS_DIR)/zlib/inftrees.c \
				 $(DEPS_DIR)/zlib/trees.c \
				 $(DEPS_DIR)/zlib/uncompr.c \
				 $(DEPS_DIR)/zlib/zutil.c

ifeq ($(HAVE_GRIFFIN),1)
SOURCES_CXX += beetle_psx_griffin.cpp \
	$(CORE_EMU_DIR)/dma.cpp \
	$(CORE_EMU_DIR)/sio.cpp

SOURCES_C += beetle_psx_griffin_c.c
endif

FLAGS += -DHAVE_PBP

ifeq ($(DEBUG), 1)
	SOURCES_CXX += $(CORE_EMU_DIR)/dis.cpp
endif

ifeq ($(NEED_THREADING), 1)
   FLAGS += -DWANT_THREADING -DHAVE_THREADS
endif

ifeq ($(NEED_CRC32), 1)
   FLAGS += -DWANT_CRC32
	SOURCES_C += $(CORE_DIR)/scrc32.c
endif

ifeq ($(NEED_DEINTERLACER), 1)
   FLAGS += -DNEED_DEINTERLACER
endif

ifeq ($(NEED_BPP), 8)
FLAGS += -DWANT_8BPP
endif

ifeq ($(NEED_BPP), 16)
FLAGS += -DWANT_16BPP
endif

ifeq ($(NEED_BPP), 32)
FLAGS += -DWANT_32BPP
endif

ifeq ($(WANT_NEW_API), 1)
FLAGS += -DWANT_NEW_API
endif

ifeq ($(NO_COMPUTED_GOTO), 1)
FLAGS += -DNO_COMPUTED_GOTO
endif

ifeq ($(FRONTEND_SUPPORTS_RGB565), 1)
FLAGS += -DFRONTEND_SUPPORTS_RGB565
endif

ifeq ($(NEED_CD), 1)
   FLAGS += -DNEED_CD
endif

ifeq ($(NEED_TREMOR), 1)
   FLAGS += -DNEED_TREMOR
endif

ifneq ($(HAVE_GRIFFIN), 1)
   SOURCES_CXX += \
	$(CORE_EMU_DIR)/irq.cpp \
	$(CORE_EMU_DIR)/timer.cpp \
	$(CORE_EMU_DIR)/dma.cpp \
	$(CORE_EMU_DIR)/frontio.cpp \
	$(CORE_EMU_DIR)/sio.cpp \
	$(CORE_EMU_DIR)/cpu.cpp \
	$(CORE_EMU_DIR)/gte.cpp \
	$(CORE_EMU_DIR)/cdc.cpp \
	$(CORE_EMU_DIR)/spu.cpp \
	$(CORE_EMU_DIR)/gpu.cpp \
	$(CORE_EMU_DIR)/mdec.cpp \
	$(CORE_EMU_DIR)/input/gamepad.cpp \
	$(CORE_EMU_DIR)/input/dualanalog.cpp \
	$(CORE_EMU_DIR)/input/dualshock.cpp \
	$(CORE_EMU_DIR)/input/justifier.cpp \
	$(CORE_EMU_DIR)/input/guncon.cpp \
	$(CORE_EMU_DIR)/input/negcon.cpp \
	$(CORE_EMU_DIR)/input/memcard.cpp \
	$(CORE_EMU_DIR)/input/multitap.cpp \
	$(CORE_EMU_DIR)/input/mouse.cpp

#ifeq ($(HAVE_JIT), 1)
#	SOURCES_CXX += $(CORE_EMU_DIR)/decomp.cpp
#endif

SOURCES_C += $(CORE_DIR)/libretro_cbs.c

ifeq ($(NEED_TREMOR), 1)
   SOURCES_C += $(sort $(wildcard $(MEDNAFEN_DIR)/tremor/*.c))
endif

ifeq ($(HAVE_CDROM_NEW), 1)
SOURCES_CXX += $(CDROM_DIR)/CDAccess.cpp \
	$(CDROM_DIR)/CDAccess_Image.cpp \
	$(CDROM_DIR)/CDAccess_CCD.cpp \
	$(CDROM_DIR)/CDAccess_PBP.cpp \
	$(CDROM_DIR)/CDAFReader.cpp \
	$(CDROM_DIR)/CDAFReader_Vorbis.cpp \
	$(CDROM_DIR)/cdromif.cpp \
	$(CDROM_DIR)/CDUtility.cpp \
	$(CDROM_DIR)/lec.cpp \
	$(CDROM_DIR)/galois.cpp \
	$(CDROM_DIR)/recover-raw.cpp \
	$(CDROM_DIR)/l-ec.cpp \
	$(CDROM_DIR)/edc_crc32.cpp
else
SOURCES_CXX += $(CDROM_DIR)/CDAccess.cpp \
	$(CDROM_DIR)/CDAccess_Image.cpp \
	$(CDROM_DIR)/CDAccess_CCD.cpp \
	$(CDROM_DIR)/CDAccess_PBP.cpp \
	$(CDROM_DIR)/audioreader.cpp \
	$(CDROM_DIR)/misc.cpp \
	$(CDROM_DIR)/cdromif.cpp

SOURCES_C += \
	$(CDROM_DIR)/CDUtility.c \
	$(CDROM_DIR)/galois.c \
	$(CDROM_DIR)/l-ec.c \
	$(CDROM_DIR)/lec.c \
	$(CDROM_DIR)/recover-raw.c \
	$(CDROM_DIR)/edc_crc32.c
endif



SOURCES_CXX += \
	$(MEDNAFEN_DIR)/error.cpp \
	$(MEDNAFEN_DIR)/settings.cpp \
	$(MEDNAFEN_DIR)/general.cpp \
	$(MEDNAFEN_DIR)/FileStream.cpp \
	$(MEDNAFEN_DIR)/MemoryStream.cpp \
	$(MEDNAFEN_DIR)/Stream.cpp \
	$(MEDNAFEN_DIR)/state.cpp \
	$(MEDNAFEN_DIR)/mempatcher.cpp \
	$(MEDNAFEN_DIR)/masmem.cpp \
	$(MEDNAFEN_DIR)/video/Deinterlacer.cpp \
	$(MEDNAFEN_DIR)/video/surface.cpp \
	$(CORE_DIR)/libretro.cpp

SOURCES_C += \
	$(MEDNAFEN_DIR)/file.c \
	$(CORE_DIR)/rsx/rsx_lib_soft.c \
	$(MEDNAFEN_DIR)/mednafen-endian.c \
	$(MEDNAFEN_DIR)/md5.c

SOURCES_CXX += $(CORE_DIR)/rsx/rsx_intf.cpp

ifneq ($(RSX_DUMP),)
   SOURCES_CXX += $(CORE_DIR)/rsx/rsx_dump.cpp
   CFLAGS += -DRSX_DUMP
   CXXFLAGS += -DRSX_DUMP
endif

ifeq ($(HAVE_VULKAN), 1)
	SOURCES_CXX += $(wildcard $(CORE_DIR)/parallel-psx/renderer/*.cpp) \
						$(wildcard $(CORE_DIR)/parallel-psx/atlas/*.cpp) \
						$(wildcard $(CORE_DIR)/parallel-psx/vulkan/*.cpp) \
						$(CORE_DIR)/parallel-psx/vulkan/SPIRV-Cross/spirv_cross.cpp \
						$(CORE_DIR)/rsx/rsx_lib_vulkan.cpp

	EXTRA_INCLUDES += -I$(CORE_DIR)/parallel-psx/vulkan/SPIRV-Cross \
							-I$(CORE_DIR)/parallel-psx/renderer \
							-I$(CORE_DIR)/parallel-psx/khronos/include \
							-I$(CORE_DIR)/parallel-psx/atlas \
							-I$(CORE_DIR)/parallel-psx/vulkan \
							-I$(CORE_DIR)/parallel-psx/glsl/prebuilt

	CXXFLAGS += -std=c++11
	ifneq ($(VULKAN_DEBUG),)
		FLAGS += -DVULKAN_DEBUG
	endif
endif

ifneq ($(STATIC_LINKING), 1)
SOURCES_C += $(LIBRETRO_DIR)/streams/file_stream.c \
	     $(LIBRETRO_DIR)/string/stdstring.c \
	     $(LIBRETRO_DIR)/compat/compat_strl.c \
	     $(LIBRETRO_DIR)/compat/compat_strcasestr.c \
	     $(LIBRETRO_DIR)/file/retro_dirent.c \
		  $(LIBRETRO_DIR)/file/file_path.c

ifeq ($(NEED_THREADING), 1)
SOURCES_C += $(LIBRETRO_DIR)/rthreads/rthreads.c
endif

endif
endif

SOURCES_C += $(LIBKIRK_DIR)/aes.c \
				 $(LIBKIRK_DIR)/amctrl.c \
				 $(LIBKIRK_DIR)/bn.c \
				 $(LIBKIRK_DIR)/des.c \
				 $(LIBKIRK_DIR)/ec.c \
				 $(LIBKIRK_DIR)/kirk_engine.c \
				 $(LIBKIRK_DIR)/sha1.c


SOURCES_C += $(CORE_DIR)/pgxp/pgxp_cpu.c \
				 $(CORE_DIR)/pgxp/pgxp_debug.c \
				 $(CORE_DIR)/pgxp/pgxp_gpu.c \
				 $(CORE_DIR)/pgxp/pgxp_gte.c \
				 $(CORE_DIR)/pgxp/pgxp_main.c \
				 $(CORE_DIR)/pgxp/pgxp_mem.c \
				 $(CORE_DIR)/pgxp/pgxp_value.c


